{"version":3,"sources":["Mans.jsx","Models.jsx","App.js","index.js"],"names":["Mans","classes","React","useState","localMans","setLocalMans","foreignMans","setForeignMans","selectedLocalMan","setSelectedLocalMan","selectedForeignMan","setSelectedForeignMan","rows","setRows","apiUrl","useEffect","fetch","then","res","json","data","Fragment","Grid","item","xs","FormControl","className","formControl","InputLabel","id","Select","labelId","value","onChange","event","target","length","map","man","MenuItem","man_id","man_name","foreign_id","name","Paper","paper","Button","variant","color","href","onClick","localMan","find","foreignMan","method","body","JSON","stringify","local_id","updatedLocalMans","filter","updatedForeignMans","TableContainer","component","Table","table","aria-label","TableHead","TableRow","TableCell","TableBody","row","scope","style","cursor","alert","Models","localModels","setLocalModels","foreignModels","setForeignModels","selectedLocalModel","setSelectedLocalModel","selectedForeignModel","setSelectedForeignModel","model","model_id","model_name","slug","localModel","foreignModel","updatedLocalModels","updatedForeignModels","useStyles","makeStyles","theme","root","flexGrow","padding","spacing","textAlign","palette","text","secondary","margin","minWidth","selectEmpty","marginTop","CenteredGrid","activeWindow","setActiveWindow","Container","maxWidth","container","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b2d73021.chunk.js","sourcesContent":["import TableContainer from '@material-ui/core/TableContainer';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport Grid from '@material-ui/core/Grid';\nimport React, { useEffect, useState } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nexport const Mans = ({ classes }) => {\n\tconst [localMans, setLocalMans] = React.useState([]);\n\tconst [foreignMans, setForeignMans] = React.useState([]);\n\tconst [selectedLocalMan, setSelectedLocalMan] = useState('');\n\tconst [selectedForeignMan, setSelectedForeignMan] = useState('');\n\tconst [rows, setRows] = useState([]);\n\tconst apiUrl = 'http://test.api2.myauto.ge/ka/';\n\n\tuseEffect(\n\t\t() =>\n\t\t\tfetch(apiUrl + 'leadGenerator/getMans')\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => setRows(res.data)),\n\t\t[]\n\t);\n\n\tuseEffect(\n\t\t() =>\n\t\t\tfetch(apiUrl + 'leadGenerator/getMans?type=all')\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => setForeignMans(res.data)),\n\t\t[]\n\t);\n\n\tuseEffect(\n\t\t() =>\n\t\t\tfetch(apiUrl + 'leadGenerator/mans')\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => setLocalMans(res.data)),\n\t\t[]\n\t);\n\n\tconst handleMapping = () => {\n\t\tif (selectedLocalMan && selectedForeignMan) {\n\t\t\tlet localMan = localMans.find(\n\t\t\t\tman => man.man_id === selectedLocalMan\n\t\t\t);\n\n\t\t\tlet foreignMan = foreignMans.find(\n\t\t\t\tman => man.foreign_id === selectedForeignMan\n\t\t\t);\n\n\t\t\tfetch(apiUrl + 'leadGenerator/setManID', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tlocal_id: selectedLocalMan,\n\t\t\t\t\tforeign_id: selectedForeignMan\n\t\t\t\t})\n\t\t\t}).then(() => {\n\t\t\t\tsetRows([\n\t\t\t\t\t{\n\t\t\t\t\t\tman_name: localMan.man_name,\n\t\t\t\t\t\tname: foreignMan.name,\n\t\t\t\t\t\tforeign_id: foreignMan.foreign_id\n\t\t\t\t\t},\n\t\t\t\t\t...rows\n\t\t\t\t]);\n\t\t\t\tsetSelectedForeignMan('');\n\t\t\t\tsetSelectedLocalMan('');\n\t\t\t\tlet updatedLocalMans = localMans.filter(\n\t\t\t\t\tman => man !== localMan\n\t\t\t\t);\n\t\t\t\tlet updatedForeignMans = foreignMans.filter(\n\t\t\t\t\tman => man !== foreignMan\n\t\t\t\t);\n\t\t\t\tsetLocalMans(updatedLocalMans);\n\t\t\t\tsetForeignMans(updatedForeignMans);\n\t\t\t});\n\t\t}\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid item xs={2}>\n\t\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t\t<InputLabel id=\"demo-simple-select-label\">\n\t\t\t\t\t\tMyAuto\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId=\"demo-simple-select-label\"\n\t\t\t\t\t\tid=\"demo-simple-select\"\n\t\t\t\t\t\tvalue={selectedLocalMan}\n\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\tsetSelectedLocalMan(event.target.value)\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{localMans.length &&\n\t\t\t\t\t\t\tlocalMans.map(man => (\n\t\t\t\t\t\t\t\t<MenuItem key={man.man_id} value={man.man_id}>\n\t\t\t\t\t\t\t\t\t{man.man_name}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={2}>\n\t\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t\t<InputLabel id=\"demo-simple-select-label\">\n\t\t\t\t\t\tBidsHistory\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId=\"demo-simple-select-label\"\n\t\t\t\t\t\tid=\"demo-simple-select\"\n\t\t\t\t\t\tvalue={selectedForeignMan}\n\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\tsetSelectedForeignMan(event.target.value)\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{foreignMans.length &&\n\t\t\t\t\t\t\tforeignMans.map(man => (\n\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\tkey={man.foreign_id}\n\t\t\t\t\t\t\t\t\tvalue={man.foreign_id}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{man.name}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={2}>\n\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\thref=\"#contained-buttons\"\n\t\t\t\t\t\tonClick={handleMapping}\n\t\t\t\t\t>\n\t\t\t\t\t\tდამეპვა\n\t\t\t\t\t</Button>\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={7}>\n\t\t\t\t<TableContainer component={Paper}>\n\t\t\t\t\t<Table className={classes.table} aria-label=\"simple table\">\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell>MyAuto</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>BidsHistory</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>წაშლა</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{rows.map(row => (\n\t\t\t\t\t\t\t\t<TableRow key={row.foreign_id}>\n\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t\t\t\t\t\t{row.man_name}\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{row.name}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t\t\t\tonClick={() => alert(row.foreign_id)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tx\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</TableContainer>\n\t\t\t</Grid>\n\t\t</React.Fragment>\n\t);\n};\n","import TableContainer from '@material-ui/core/TableContainer';\nimport Paper from '@material-ui/core/Paper';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableBody from '@material-ui/core/TableBody';\nimport Grid from '@material-ui/core/Grid';\nimport React, { useEffect, useState } from 'react';\nimport FormControl from '@material-ui/core/FormControl';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Button from '@material-ui/core/Button';\n\nexport const Models = ({ classes }) => {\n\tconst [localMans, setLocalMans] = React.useState([]);\n\tconst [foreignMans, setForeignMans] = React.useState([]);\n\tconst [selectedLocalMan, setSelectedLocalMan] = useState('');\n\tconst [selectedForeignMan, setSelectedForeignMan] = useState('');\n\tconst [localModels, setLocalModels] = useState([]);\n\tconst [foreignModels, setForeignModels] = useState([]);\n\tconst [selectedLocalModel, setSelectedLocalModel] = useState('');\n\tconst [selectedForeignModel, setSelectedForeignModel] = useState('');\n\tconst [rows, setRows] = useState([]);\n\tconst apiUrl = 'http://test.api2.myauto.ge/ka/';\n\n\tuseEffect(\n\t\t() =>\n\t\t\tfetch(apiUrl + 'leadGenerator/getMappedModels')\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => setRows(res.data)),\n\t\t[]\n\t);\n\n\tuseEffect(\n\t\t() =>\n\t\t\tfetch(apiUrl + 'leadGenerator/getMans?type=eveything')\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => setForeignMans(res.data)),\n\t\t[]\n\t);\n\n\tuseEffect(\n\t\t() =>\n\t\t\tfetch(apiUrl + 'leadGenerator/mans')\n\t\t\t\t.then(res => res.json())\n\t\t\t\t.then(res => setLocalMans(res.data)),\n\t\t[]\n\t);\n\n\tconst handleMapping = () => {\n\t\tif (selectedLocalModel && selectedForeignModel) {\n\t\t\tlet localModel = localModels.find(\n\t\t\t\tmodel => model.model_id === selectedLocalModel\n\t\t\t);\n\n\t\t\tlet foreignModel = foreignModels.find(\n\t\t\t\tmodel => model.slug === selectedForeignModel.slug\n\t\t\t);\n\n\t\t\tfetch(apiUrl + 'leadGenerator/setModelID', {\n\t\t\t\tmethod: 'POST',\n\t\t\t\tbody: JSON.stringify({\n\t\t\t\t\tman_id: selectedForeignMan,\n\t\t\t\t\tmodel_name: selectedForeignModel.name,\n\t\t\t\t\tlocal_id: selectedLocalModel,\n\t\t\t\t\tslug: selectedForeignModel.slug\n\t\t\t\t})\n\t\t\t}).then(() => {\n\t\t\t\tsetRows([\n\t\t\t\t\t{\n\t\t\t\t\t\tmodel_name: localModel.model_name,\n\t\t\t\t\t\tname: foreignModel.name,\n\t\t\t\t\t\tslug: foreignModel.slug\n\t\t\t\t\t},\n\t\t\t\t\t...rows\n\t\t\t\t]);\n\t\t\t\tsetSelectedForeignModel('');\n\t\t\t\tsetSelectedLocalModel('');\n\t\t\t\tlet updatedLocalModels = localModels.filter(\n\t\t\t\t\tmodel => model !== localModel\n\t\t\t\t);\n\t\t\t\tlet updatedForeignModels = foreignModels.filter(\n\t\t\t\t\tmodel => model !== foreignModel\n\t\t\t\t);\n\t\t\t\tsetLocalModels(updatedLocalModels);\n\t\t\t\tsetForeignModels(updatedForeignModels);\n\t\t\t});\n\t\t}\n\t};\n\n\tconst handleLocalManSelect = value => {\n\t\tsetSelectedLocalMan(value);\n\n\t\tfetch(`${apiUrl}leadGenerator/getLocalModels?man_id=${value}`)\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => setLocalModels(res.data));\n\t};\n\n\tconst handleForeignManSelect = value => {\n\t\tsetSelectedForeignMan(value);\n\n\t\tfetch(`${apiUrl}leadGenerator/getForeignModels?man_id=${value}`)\n\t\t\t.then(res => res.json())\n\t\t\t.then(res => setForeignModels(res.data));\n\t};\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<Grid item xs={2}>\n\t\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t\t<InputLabel id=\"demo-simple-select-label\">\n\t\t\t\t\t\tMyAuto\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId=\"demo-simple-select-label\"\n\t\t\t\t\t\tid=\"demo-simple-select\"\n\t\t\t\t\t\tvalue={selectedLocalMan}\n\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\thandleLocalManSelect(event.target.value)\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{localMans.length &&\n\t\t\t\t\t\t\tlocalMans.map(man => (\n\t\t\t\t\t\t\t\t<MenuItem key={man.man_id} value={man.man_id}>\n\t\t\t\t\t\t\t\t\t{man.man_name}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={2}>\n\t\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t\t<InputLabel id=\"demo-simple-select-label\">\n\t\t\t\t\t\tModels\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId=\"demo-simple-select-label\"\n\t\t\t\t\t\tid=\"demo-simple-select\"\n\t\t\t\t\t\tvalue={selectedLocalModel}\n\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\tsetSelectedLocalModel(event.target.value)\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{localModels.length &&\n\t\t\t\t\t\t\tlocalModels.map(model => (\n\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\tkey={model.model_id}\n\t\t\t\t\t\t\t\t\tvalue={model.model_id}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{model.model_name}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={2}>\n\t\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t\t<InputLabel id=\"demo-simple-select-label\">\n\t\t\t\t\t\tBidsHistory\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId=\"demo-simple-select-label\"\n\t\t\t\t\t\tid=\"demo-simple-select\"\n\t\t\t\t\t\tvalue={selectedForeignMan}\n\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\thandleForeignManSelect(event.target.value)\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{foreignMans.length &&\n\t\t\t\t\t\t\tforeignMans.map(man => (\n\t\t\t\t\t\t\t\t<MenuItem\n\t\t\t\t\t\t\t\t\tkey={man.foreign_id}\n\t\t\t\t\t\t\t\t\tvalue={man.foreign_id}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t{man.name}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={2}>\n\t\t\t\t<FormControl className={classes.formControl}>\n\t\t\t\t\t<InputLabel id=\"demo-simple-select-label\">\n\t\t\t\t\t\tModels\n\t\t\t\t\t</InputLabel>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tlabelId=\"demo-simple-select-label\"\n\t\t\t\t\t\tid=\"demo-simple-select\"\n\t\t\t\t\t\tvalue={selectedForeignModel}\n\t\t\t\t\t\tonChange={event =>\n\t\t\t\t\t\t\tsetSelectedForeignModel(event.target.value)\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t{foreignModels.length &&\n\t\t\t\t\t\t\tforeignModels.map(model => (\n\t\t\t\t\t\t\t\t<MenuItem key={model.slug} value={model}>\n\t\t\t\t\t\t\t\t\t{model.name}\n\t\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t</Select>\n\t\t\t\t</FormControl>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={2}>\n\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t<Button\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\thref=\"#contained-buttons\"\n\t\t\t\t\t\tonClick={handleMapping}\n\t\t\t\t\t>\n\t\t\t\t\t\tდამეპვა\n\t\t\t\t\t</Button>\n\t\t\t\t</Paper>\n\t\t\t</Grid>\n\t\t\t<Grid item xs={7}>\n\t\t\t\t<TableContainer component={Paper}>\n\t\t\t\t\t<Table className={classes.table} aria-label=\"simple table\">\n\t\t\t\t\t\t<TableHead>\n\t\t\t\t\t\t\t<TableRow>\n\t\t\t\t\t\t\t\t<TableCell>MyAuto</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>BidsHistory</TableCell>\n\t\t\t\t\t\t\t\t<TableCell>წაშლა</TableCell>\n\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t</TableHead>\n\t\t\t\t\t\t<TableBody>\n\t\t\t\t\t\t\t{rows.map(row => (\n\t\t\t\t\t\t\t\t<TableRow key={row.slug}>\n\t\t\t\t\t\t\t\t\t<TableCell component=\"th\" scope=\"row\">\n\t\t\t\t\t\t\t\t\t\t{row.model_name}\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell>{row.name}</TableCell>\n\t\t\t\t\t\t\t\t\t<TableCell\n\t\t\t\t\t\t\t\t\t\tstyle={{ cursor: 'pointer' }}\n\t\t\t\t\t\t\t\t\t\tonClick={() => alert(row.slug)}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tx\n\t\t\t\t\t\t\t\t\t</TableCell>\n\t\t\t\t\t\t\t\t</TableRow>\n\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t</TableBody>\n\t\t\t\t\t</Table>\n\t\t\t\t</TableContainer>\n\t\t\t</Grid>\n\t\t</React.Fragment>\n\t);\n};\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport Container from '@material-ui/core/Container';\nimport { Mans } from './Mans';\nimport { Models } from './Models';\n\nconst useStyles = makeStyles(theme => ({\n\troot: {\n\t\tflexGrow: 1\n\t},\n\tpaper: {\n\t\tpadding: theme.spacing(2),\n\t\ttextAlign: 'center',\n\t\tcolor: theme.palette.text.secondary\n\t},\n\tformControl: {\n\t\tmargin: theme.spacing(1),\n\t\tminWidth: 120\n\t},\n\tselectEmpty: {\n\t\tmarginTop: theme.spacing(2)\n\t}\n}));\n\nexport default function CenteredGrid() {\n\tconst [activeWindow, setActiveWindow] = useState('mans');\n\tconst classes = useStyles();\n\n\treturn (\n\t\t<Container maxWidth=\"lg\">\n\t\t\t<div className={classes.root}>\n\t\t\t\t<Grid container spacing={3}>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\thref=\"#contained-buttons\"\n\t\t\t\t\t\t\t\tonClick={() => setActiveWindow('mans')}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tმწარმოებლები\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={6}>\n\t\t\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\t\thref=\"#contained-buttons\"\n\t\t\t\t\t\t\t\tonClick={() => setActiveWindow('models')}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tმოდელები\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</Paper>\n\t\t\t\t\t</Grid>\n\t\t\t\t\t{activeWindow === 'mans' ? (\n\t\t\t\t\t\t<Mans classes={classes} />\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Models classes={classes} />\n\t\t\t\t\t)}\n\t\t\t\t</Grid>\n\t\t\t</div>\n\t\t</Container>\n\t);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}